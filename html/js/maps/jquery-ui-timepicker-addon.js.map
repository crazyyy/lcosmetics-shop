{"version":3,"sources":["jquery-ui-timepicker-addon.js"],"names":["$","Timepicker","this","regional","currentText","closeText","ampm","timeFormat","timeOnlyTitle","timeText","hourText","minuteText","secondText","timezoneText","_defaults","showButtonPanel","timeOnly","showHour","showMinute","showSecond","showTimezone","showTime","stepHour","stepMinute","stepSecond","hour","minute","second","timezone","hourMin","minuteMin","secondMin","hourMax","minuteMax","secondMax","minDateTime","maxDateTime","hourGrid","minuteGrid","secondGrid","alwaysSetTime","separator","altFieldTimeOnly","showTimepicker","timezoneList","extend","extendRemove","target","props","name","undefined","ui","timepicker","version","prototype","$input","$altInput","$timeObj","inst","hour_slider","minute_slider","second_slider","timezone_select","hourMinOriginal","minuteMinOriginal","secondMinOriginal","hourMaxOriginal","minuteMaxOriginal","secondMaxOriginal","formattedDate","formattedTime","formattedDateTime","setDefaults","settings","_newInst","o","tp_inst","inlineSettings","attrName","attrValue","attr","eval","err","beforeShow","input","dp_inst","isFunction","onChangeMonthYear","year","month","_updateDateTime","call","onClose","dateText","timeDefined","val","altField","css","cursor","focus","trigger","minDate","Date","getTime","maxDate","_addTimePicker","currDT","_parseTime","_limitMinMaxDateTime","_injectTimePicker","timeString","withDate","treg","regstr","toString","replace","order","_getFormatPositions","datepicker","_getInst","dp_dateFormat","_get","specials","RegExp","length","match","t","charAt","toUpperCase","h","parseFloat","toFixed","Number","m","s","z","finds","toLowerCase","orders","i","$dp","dpDiv","minMax","secMax","dp_id","id","find","size","noDisplay","html","hourGridSize","minuteGridSize","secondGridSize","tmph","$tp","prepend","hide","slider","orientation","value","min","max","step","slide","event","_onTimeChange","append","fn","apply","map","idx","text","label","change","width","marginLeft","borderCollapse","each","index","click","ap","substring","aph","parseInt","_onSelectHandler","textAlign","overflow","$buttonPanel","before","onSelectDelegate","bind","adjustSliders","dp_date","selectedYear","selectedMonth","selectedDay","minDateTimeDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","maxDateTimeDate","hasChanged","_formatTime","onSelect","inputEl","time","format","tmptime","hour12","trim","arguments","dt","dateFmt","formatCfg","_getFormatConfig","timeAvailable","formatDate","lastVal","tmp_args","datetimepicker","$t","_base_selectDate","_selectDate","dateStr","inline","stay_open","_notifyChange","_updateDatepicker","_base_updateDatepicker","_base_doKeyPress","_doKeyPress","datetimeChars","_possibleChars","chr","String","fromCharCode","charCode","keyCode","ctrlKey","indexOf","_base_doKeyUp","_doKeyUp","log","_base_gotoToday","_gotoToday","_setTime","_disableTimepickerDatepicker","date","_enableTimepickerDatepicker","defaults","_setTimeDatepicker","_setDateFromField","tp_date","setHours","_base_setDateDatepicker","_setDateDatepicker","_base_getDateDatepicker","_getDateDatepicker","noDefault","_getDate","jQuery"],"mappings":"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","file":"jquery-ui-timepicker-addon.js","sourcesContent":["/*\n* jQuery timepicker addon\n* By: Trent Richardson [http://trentrichardson.com]\n* Version 0.9.5\n* Last Modified: 05/25/2011\n* \n* Copyright 2011 Trent Richardson\n* Dual licensed under the MIT and GPL licenses.\n* http://trentrichardson.com/Impromptu/GPL-LICENSE.txt\n* http://trentrichardson.com/Impromptu/MIT-LICENSE.txt\n* \n* HERES THE CSS:\n* .ui-timepicker-div .ui-widget-header{ margin-bottom: 8px; }\n* .ui-timepicker-div dl{ text-align: left; }\n* .ui-timepicker-div dl dt{ height: 25px; }\n* .ui-timepicker-div dl dd{ margin: -25px 10px 10px 65px; }\n* .ui-timepicker-div td { font-size: 90%; }\n*/\n\n(function($) {\n\n$.extend($.ui, { timepicker: { version: \"0.9.5\" } });\n\n/* Time picker manager.\n   Use the singleton instance of this class, $.timepicker, to interact with the time picker.\n   Settings for (groups of) time pickers are maintained in an instance object,\n   allowing multiple different settings on the same page. */\n\nfunction Timepicker() {\n\tthis.regional = []; // Available regional settings, indexed by language code\n\tthis.regional[''] = { // Default regional settings\n\t\tcurrentText: 'Now',\n\t\tcloseText: 'Done',\n\t\tampm: false,\n\t\ttimeFormat: 'hh:mm tt',\n\t\ttimeOnlyTitle: 'Choose Time',\n\t\ttimeText: 'Time',\n\t\thourText: 'Hour',\n\t\tminuteText: 'Minute',\n\t\tsecondText: 'Second',\n\t\ttimezoneText: 'Time Zone'\n\t};\n\tthis._defaults = { // Global defaults for all the datetime picker instances\n\t\tshowButtonPanel: true,\n\t\ttimeOnly: false,\n\t\tshowHour: true,\n\t\tshowMinute: true,\n\t\tshowSecond: false,\n\t\tshowTimezone: false,\n\t\tshowTime: true,\n\t\tstepHour: 0.05,\n\t\tstepMinute: 0.05,\n\t\tstepSecond: 0.05,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0,\n\t\ttimezone: '+0000',\n\t\thourMin: 0,\n\t\tminuteMin: 0,\n\t\tsecondMin: 0,\n\t\thourMax: 23,\n\t\tminuteMax: 59,\n\t\tsecondMax: 59,\n\t\tminDateTime: null,\n\t\tmaxDateTime: null,\n\t\thourGrid: 0,\n\t\tminuteGrid: 0,\n\t\tsecondGrid: 0,\n\t\talwaysSetTime: true,\n\t\tseparator: ' ',\n\t\taltFieldTimeOnly: true,\n\t\tshowTimepicker: true,\n\t\ttimezoneList: [\"-1100\", \"-1000\", \"-0900\", \"-0800\", \"-0700\", \"-0600\",\n\t\t\t       \"-0500\", \"-0400\", \"-0300\", \"-0200\", \"-0100\", \"+0000\",\n\t\t\t       \"+0100\", \"+0200\", \"+0300\", \"+0400\", \"+0500\", \"+0600\",\n\t\t\t       \"+0700\", \"+0800\", \"+0900\", \"+1000\", \"+1100\", \"+1200\"]\n\t};\n\t$.extend(this._defaults, this.regional['']);\n}\n\n$.extend(Timepicker.prototype, {\n\t$input: null,\n\t$altInput: null,\n\t$timeObj: null,\n\tinst: null,\n\thour_slider: null,\n\tminute_slider: null,\n\tsecond_slider: null,\n\ttimezone_select: null,\n\thour: 0,\n\tminute: 0,\n\tsecond: 0,\n\ttimezone: '+0000',\n\thourMinOriginal: null,\n\tminuteMinOriginal: null,\n\tsecondMinOriginal: null,\n\thourMaxOriginal: null,\n\tminuteMaxOriginal: null,\n\tsecondMaxOriginal: null,\n\tampm: '',\n\tformattedDate: '',\n\tformattedTime: '',\n\tformattedDateTime: '',\n\ttimezoneList: [\"-1100\", \"-1000\", \"-0900\", \"-0800\", \"-0700\", \"-0600\",\n\t\t\t\"-0500\", \"-0400\", \"-0300\", \"-0200\", \"-0100\", \"+0000\",\n\t\t\t\"+0100\", \"+0200\", \"+0300\", \"+0400\", \"+0500\", \"+0600\",\n\t\t\t\"+0700\", \"+0800\", \"+0900\", \"+1000\", \"+1100\", \"+1200\"],\n\n\t/* Override the default settings for all instances of the time picker.\n\t   @param  settings  object - the new settings to use as defaults (anonymous object)\n\t   @return the manager object */\n\tsetDefaults: function(settings) {\n\t\textendRemove(this._defaults, settings || {});\n\t\treturn this;\n\t},\n\n\t//########################################################################\n\t// Create a new Timepicker instance\n\t//########################################################################\n\t_newInst: function($input, o) {\n\t\tvar tp_inst = new Timepicker(),\n\t\t\tinlineSettings = {};\n\t\t\t\n\t\tfor (var attrName in this._defaults) {\n\t\t\tvar attrValue = $input.attr('time:' + attrName);\n\t\t\tif (attrValue) {\n\t\t\t\ttry {\n\t\t\t\t\tinlineSettings[attrName] = eval(attrValue);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tinlineSettings[attrName] = attrValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttp_inst._defaults = $.extend({}, this._defaults, inlineSettings, o, {\n\t\t\tbeforeShow: function(input, dp_inst) {\n\t\t\t\tif ($.isFunction(o.beforeShow))\n\t\t\t\t\to.beforeShow(input, dp_inst, tp_inst);\n\t\t\t},\n\t\t\tonChangeMonthYear: function(year, month, dp_inst) {\n\t\t\t\t// Update the time as well : this prevents the time from disappearing from the $input field.\n\t\t\t\ttp_inst._updateDateTime(dp_inst);\n\t\t\t\tif ($.isFunction(o.onChangeMonthYear))\n\t\t\t\t\to.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\n\t\t\t},\n\t\t\tonClose: function(dateText, dp_inst) {\n\t\t\t\tif (tp_inst.timeDefined === true && $input.val() != '')\n\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\n\t\t\t\tif ($.isFunction(o.onClose))\n\t\t\t\t\to.onClose.call($input[0], dateText, dp_inst, tp_inst);\n\t\t\t},\n\t\t\ttimepicker: tp_inst // add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\n\t\t});\n\n\t\ttp_inst.hour = tp_inst._defaults.hour;\n\t\ttp_inst.minute = tp_inst._defaults.minute;\n\t\ttp_inst.second = tp_inst._defaults.second;\n\t\ttp_inst.ampm = '';\n\t\ttp_inst.$input = $input;\n\n\t\tif (o.altField)\n\t\t\ttp_inst.$altInput = $(o.altField)\n\t\t\t\t.css({ cursor: 'pointer' })\n\t\t\t\t.focus(function(){ $input.trigger(\"focus\"); });\n\t\t\t\t\t\t\n\t\t// datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\n\t\tif(tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date)\n\t\t\ttp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\n\t\tif(tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date)\n\t\t\ttp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\n\t\tif(tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date)\n\t\t\ttp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\n\t\tif(tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date)\n\t\t\ttp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\n\t\t\t\n\t\treturn tp_inst;\n\t},\n\n\t//########################################################################\n\t// add our sliders to the calendar\n\t//########################################################################\n\t_addTimePicker: function(dp_inst) {\n\t\tvar currDT = (this.$altInput && this._defaults.altFieldTimeOnly) ?\n\t\t\t\tthis.$input.val() + ' ' + this.$altInput.val() : \n\t\t\t\tthis.$input.val();\n\n\t\tthis.timeDefined = this._parseTime(currDT);\n\t\tthis._limitMinMaxDateTime(dp_inst, false);\n\t\tthis._injectTimePicker();\n\t},\n\n\t//########################################################################\n\t// parse the time string from input value or _setTime\n\t//########################################################################\n\t_parseTime: function(timeString, withDate) {\n\t\tvar regstr = this._defaults.timeFormat.toString()\n\t\t\t\t.replace(/h{1,2}/ig, '(\\\\d?\\\\d)')\n\t\t\t\t.replace(/m{1,2}/ig, '(\\\\d?\\\\d)')\n\t\t\t\t.replace(/s{1,2}/ig, '(\\\\d?\\\\d)')\n\t\t\t\t.replace(/t{1,2}/ig, '(am|pm|a|p)?')\n\t\t\t\t.replace(/z{1}/ig, '((\\\\+|-)\\\\d\\\\d\\\\d\\\\d)?')\n\t\t\t\t.replace(/\\s/g, '\\\\s?') + '$',\n\t\t\torder = this._getFormatPositions(),\n\t\t\ttreg;\n\n\t\tif (!this.inst) this.inst = $.datepicker._getInst(this.$input[0]);\n\n\t\tif (withDate || !this._defaults.timeOnly) {\n\t\t\t// the time should come after x number of characters and a space.\n\t\t\t// x = at least the length of text specified by the date format\n\t\t\tvar dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\n\t\t\t// escape special regex characters in the seperator\n\t\t\tvar specials = new RegExp(\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\", \"g\");\n\t\t\tregstr = '.{' + dp_dateFormat.length + ',}' + this._defaults.separator.replace(specials, \"\\\\$&\") + regstr;\n\t\t}\n\t\t\n\t\ttreg = timeString.match(new RegExp(regstr, 'i'));\n\n\t\tif (treg) {\n\t\t\tif (order.t !== -1)\n\t\t\t\tthis.ampm = ((treg[order.t] === undefined || treg[order.t].length === 0) ?\n\t\t\t\t\t'' :\n\t\t\t\t\t(treg[order.t].charAt(0).toUpperCase() == 'A') ? 'AM' : 'PM').toUpperCase();\n\n\t\t\tif (order.h !== -1) {\n\t\t\t\tif (this.ampm == 'AM' && treg[order.h] == '12') \n\t\t\t\t\tthis.hour = 0; // 12am = 0 hour\n\t\t\t\telse if (this.ampm == 'PM' && treg[order.h] != '12') \n\t\t\t\t\tthis.hour = (parseFloat(treg[order.h]) + 12).toFixed(0); // 12pm = 12 hour, any other pm = hour + 12\n\t\t\t\telse this.hour = Number(treg[order.h]);\n\t\t\t}\n\n\t\t\tif (order.m !== -1) this.minute = Number(treg[order.m]);\n\t\t\tif (order.s !== -1) this.second = Number(treg[order.s]);\n\t\t\tif (order.z !== -1) this.timezone = treg[order.z];\n\t\t\t\n\t\t\treturn true;\n\n\t\t}\n\t\treturn false;\n\t},\n\n\t//########################################################################\n\t// figure out position of time elements.. cause js cant do named captures\n\t//########################################################################\n\t_getFormatPositions: function() {\n\t\tvar finds = this._defaults.timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|t{1,2}|z)/g),\n\t\t\torders = { h: -1, m: -1, s: -1, t: -1, z: -1 };\n\n\t\tif (finds)\n\t\t\tfor (var i = 0; i < finds.length; i++)\n\t\t\t\tif (orders[finds[i].toString().charAt(0)] == -1)\n\t\t\t\t\torders[finds[i].toString().charAt(0)] = i + 1;\n\n\t\treturn orders;\n\t},\n\n\t//########################################################################\n\t// generate and inject html for timepicker into ui datepicker\n\t//########################################################################\n\t_injectTimePicker: function() {\n\t\tvar $dp = this.inst.dpDiv,\n\t\t\to = this._defaults,\n\t\t\ttp_inst = this,\n\t\t\t// Added by Peter Medeiros:\n\t\t\t// - Figure out what the hour/minute/second max should be based on the step values.\n\t\t\t// - Example: if stepMinute is 15, then minMax is 45.\n\t\t\thourMax = (o.hourMax - (o.hourMax % o.stepHour)).toFixed(0),\n\t\t\tminMax  = (o.minuteMax - (o.minuteMax % o.stepMinute)).toFixed(0),\n\t\t\tsecMax  = (o.secondMax - (o.secondMax % o.stepSecond)).toFixed(0),\n\t\t\tdp_id = this.inst.id.toString().replace(/([^A-Za-z0-9_])/g, '');\n\n\t\t// Prevent displaying twice\n\t\t//if ($dp.find(\"div#ui-timepicker-div-\"+ dp_id).length === 0) {\n\t\tif ($dp.find(\"div#ui-timepicker-div-\"+ dp_id).length === 0 && o.showTimepicker) {\n\t\t\tvar noDisplay = ' style=\"display:none;\"',\n\t\t\t\thtml =\t'<div class=\"ui-timepicker-div\" id=\"ui-timepicker-div-' + dp_id + '\"><dl>' +\n\t\t\t\t\t\t'<dt class=\"ui_tpicker_time_label\" id=\"ui_tpicker_time_label_' + dp_id + '\"' +\n\t\t\t\t\t\t((o.showTime) ? '' : noDisplay) + '>' + o.timeText + '</dt>' +\n\t\t\t\t\t\t'<dd class=\"ui_tpicker_time\" id=\"ui_tpicker_time_' + dp_id + '\"' +\n\t\t\t\t\t\t((o.showTime) ? '' : noDisplay) + '></dd>' +\n\t\t\t\t\t\t'<dt class=\"ui_tpicker_hour_label\" id=\"ui_tpicker_hour_label_' + dp_id + '\"' +\n\t\t\t\t\t\t((o.showHour) ? '' : noDisplay) + '>' + o.hourText + '</dt>',\n\t\t\t\thourGridSize = 0,\n\t\t\t\tminuteGridSize = 0,\n\t\t\t\tsecondGridSize = 0,\n\t\t\t\tsize;\n \n\t\t\tif (o.showHour && o.hourGrid > 0) {\n\t\t\t\thtml += '<dd class=\"ui_tpicker_hour\">' +\n\t\t\t\t\t\t'<div id=\"ui_tpicker_hour_' + dp_id + '\"' + ((o.showHour)   ? '' : noDisplay) + '></div>' +\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table><tr>';\n\n\t\t\t\tfor (var h = o.hourMin; h < hourMax; h += o.hourGrid) {\n\t\t\t\t\thourGridSize++;\n\t\t\t\t\tvar tmph = (o.ampm && h > 12) ? h-12 : h;\n\t\t\t\t\tif (tmph < 10) tmph = '0' + tmph;\n\t\t\t\t\tif (o.ampm) {\n\t\t\t\t\t\tif (h == 0) tmph = 12 +'a';\n\t\t\t\t\t\telse if (h < 12) tmph += 'a';\n\t\t\t\t\t\telse tmph += 'p';\n\t\t\t\t\t}\n\t\t\t\t\thtml += '<td>' + tmph + '</td>';\n\t\t\t\t}\n\n\t\t\t\thtml += '</tr></table></div>' +\n\t\t\t\t\t\t'</dd>';\n\t\t\t} else html += '<dd class=\"ui_tpicker_hour\" id=\"ui_tpicker_hour_' + dp_id + '\"' +\n\t\t\t\t\t\t\t((o.showHour) ? '' : noDisplay) + '></dd>';\n\n\t\t\thtml += '<dt class=\"ui_tpicker_minute_label\" id=\"ui_tpicker_minute_label_' + dp_id + '\"' +\n\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '>' + o.minuteText + '</dt>';\n\n\t\t\tif (o.showMinute && o.minuteGrid > 0) {\n\t\t\t\thtml += '<dd class=\"ui_tpicker_minute ui_tpicker_minute_' + o.minuteGrid + '\">' +\n\t\t\t\t\t\t'<div id=\"ui_tpicker_minute_' + dp_id + '\"' +\n\t\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '></div>' +\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table><tr>';\n\n\t\t\t\tfor (var m = o.minuteMin; m < minMax; m += o.minuteGrid) {\n\t\t\t\t\tminuteGridSize++;\n\t\t\t\t\thtml += '<td>' + ((m < 10) ? '0' : '') + m + '</td>';\n\t\t\t\t}\n\n\t\t\t\thtml += '</tr></table></div>' +\n\t\t\t\t\t\t'</dd>';\n\t\t\t} else html += '<dd class=\"ui_tpicker_minute\" id=\"ui_tpicker_minute_' + dp_id + '\"' +\n\t\t\t\t\t\t\t((o.showMinute) ? '' : noDisplay) + '></dd>';\n\n\t\t\thtml += '<dt class=\"ui_tpicker_second_label\" id=\"ui_tpicker_second_label_' + dp_id + '\"' +\n\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '>' + o.secondText + '</dt>';\n\n\t\t\tif (o.showSecond && o.secondGrid > 0) {\n\t\t\t\thtml += '<dd class=\"ui_tpicker_second ui_tpicker_second_' + o.secondGrid + '\">' +\n\t\t\t\t\t\t'<div id=\"ui_tpicker_second_' + dp_id + '\"' +\n\t\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '></div>' +\n\t\t\t\t\t\t'<div style=\"padding-left: 1px\"><table><tr>';\n\n\t\t\t\tfor (var s = o.secondMin; s < secMax; s += o.secondGrid) {\n\t\t\t\t\tsecondGridSize++;\n\t\t\t\t\thtml += '<td>' + ((s < 10) ? '0' : '') + s + '</td>';\n\t\t\t\t}\n\n\t\t\t\thtml += '</tr></table></div>' +\n\t\t\t\t\t\t'</dd>';\n\t\t\t} else html += '<dd class=\"ui_tpicker_second\" id=\"ui_tpicker_second_' + dp_id + '\"'\t+\n\t\t\t\t\t\t\t((o.showSecond) ? '' : noDisplay) + '></dd>';\n\t\t\t\t\t\t\t\n\t\t\thtml += '<dt class=\"ui_tpicker_timezone_label\" id=\"ui_tpicker_timezone_label_' + dp_id + '\"' +\n\t\t\t\t\t((o.showTimezone) ? '' : noDisplay) + '>' + o.timezoneText + '</dt>';\n\t\t\thtml += '<dd class=\"ui_tpicker_timezone\" id=\"ui_tpicker_timezone_' + dp_id + '\"'\t+\n\t\t\t\t\t\t\t((o.showTimezone) ? '' : noDisplay) + '></dd>';\n\n\t\t\thtml += '</dl></div>';\n\t\t\t$tp = $(html);\n\n\t\t\t\t// if we only want time picker...\n\t\t\tif (o.timeOnly === true) {\n\t\t\t\t$tp.prepend(\n\t\t\t\t\t'<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' +\n\t\t\t\t\t\t'<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '</div>' +\n\t\t\t\t\t'</div>');\n\t\t\t\t$dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\n\t\t\t}\n\n\t\t\tthis.hour_slider = $tp.find('#ui_tpicker_hour_'+ dp_id).slider({\n\t\t\t\torientation: \"horizontal\",\n\t\t\t\tvalue: this.hour,\n\t\t\t\tmin: o.hourMin,\n\t\t\t\tmax: hourMax,\n\t\t\t\tstep: o.stepHour,\n\t\t\t\tslide: function(event, ui) {\n\t\t\t\t\ttp_inst.hour_slider.slider( \"option\", \"value\", ui.value);\n\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Updated by Peter Medeiros:\n\t\t\t// - Pass in Event and UI instance into slide function\n\t\t\tthis.minute_slider = $tp.find('#ui_tpicker_minute_'+ dp_id).slider({\n\t\t\t\torientation: \"horizontal\",\n\t\t\t\tvalue: this.minute,\n\t\t\t\tmin: o.minuteMin,\n\t\t\t\tmax: minMax,\n\t\t\t\tstep: o.stepMinute,\n\t\t\t\tslide: function(event, ui) {\n\t\t\t\t\t// update the global minute slider instance value with the current slider value\n\t\t\t\t\ttp_inst.minute_slider.slider( \"option\", \"value\", ui.value);\n\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.second_slider = $tp.find('#ui_tpicker_second_'+ dp_id).slider({\n\t\t\t\torientation: \"horizontal\",\n\t\t\t\tvalue: this.second,\n\t\t\t\tmin: o.secondMin,\n\t\t\t\tmax: secMax,\n\t\t\t\tstep: o.stepSecond,\n\t\t\t\tslide: function(event, ui) {\n\t\t\t\t\ttp_inst.second_slider.slider( \"option\", \"value\", ui.value);\n\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\tthis.timezone_select = $tp.find('#ui_tpicker_timezone_'+ dp_id).append('<select></select>').find(\"select\");\n\t\t\t$.fn.append.apply(this.timezone_select,\n\t\t\t\t$.map(o.timezoneList, function(val, idx) {\n\t\t\t\t\treturn $(\"<option />\")\n\t\t\t\t\t\t.val(typeof val == \"object\" ? val.value : val)\n\t\t\t\t\t\t.text(typeof val == \"object\" ? val.label : val);\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.timezone_select.val((typeof this.timezone != \"undefined\" && this.timezone != null && this.timezone != \"\") ? this.timezone : o.timezone);\n\t\t\tthis.timezone_select.change(function() {\n\t\t\t\ttp_inst._onTimeChange();\n\t\t\t});\n\n\t\t\t// Add grid functionality\n\t\t\tif (o.showHour && o.hourGrid > 0) {\n\t\t\t\tsize = 100 * hourGridSize * o.hourGrid / (hourMax - o.hourMin);\n\n\t\t\t\t$tp.find(\".ui_tpicker_hour table\").css({\n\t\t\t\t\twidth: size + \"%\",\n\t\t\t\t\tmarginLeft: (size / (-2 * hourGridSize)) + \"%\",\n\t\t\t\t\tborderCollapse: 'collapse'\n\t\t\t\t}).find(\"td\").each( function(index) {\n\t\t\t\t\t$(this).click(function() {\n\t\t\t\t\t\tvar h = $(this).html();\n\t\t\t\t\t\tif(o.ampm)\t{\n\t\t\t\t\t\t\tvar ap = h.substring(2).toLowerCase(),\n\t\t\t\t\t\t\t\taph = parseInt(h.substring(0,2));\n\t\t\t\t\t\t\tif (ap == 'a') {\n\t\t\t\t\t\t\t\tif (aph == 12) h = 0;\n\t\t\t\t\t\t\t\telse h = aph;\n\t\t\t\t\t\t\t} else if (aph == 12) h = 12;\n\t\t\t\t\t\t\telse h = aph + 12;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttp_inst.hour_slider.slider(\"option\", \"value\", h);\n\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t}).css({\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\twidth: (100 / hourGridSize) + '%',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (o.showMinute && o.minuteGrid > 0) {\n\t\t\t\tsize = 100 * minuteGridSize * o.minuteGrid / (minMax - o.minuteMin);\n\t\t\t\t$tp.find(\".ui_tpicker_minute table\").css({\n\t\t\t\t\twidth: size + \"%\",\n\t\t\t\t\tmarginLeft: (size / (-2 * minuteGridSize)) + \"%\",\n\t\t\t\t\tborderCollapse: 'collapse'\n\t\t\t\t}).find(\"td\").each(function(index) {\n\t\t\t\t\t$(this).click(function() {\n\t\t\t\t\t\ttp_inst.minute_slider.slider(\"option\", \"value\", $(this).html());\n\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t}).css({\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\twidth: (100 / minuteGridSize) + '%',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (o.showSecond && o.secondGrid > 0) {\n\t\t\t\t$tp.find(\".ui_tpicker_second table\").css({\n\t\t\t\t\twidth: size + \"%\",\n\t\t\t\t\tmarginLeft: (size / (-2 * secondGridSize)) + \"%\",\n\t\t\t\t\tborderCollapse: 'collapse'\n\t\t\t\t}).find(\"td\").each(function(index) {\n\t\t\t\t\t$(this).click(function() {\n\t\t\t\t\t\ttp_inst.second_slider.slider(\"option\", \"value\", $(this).html());\n\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t}).css({\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\twidth: (100 / secondGridSize) + '%',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\n\t\t\tif ($buttonPanel.length) $buttonPanel.before($tp);\n\t\t\telse $dp.append($tp);\n\n\t\t\tthis.$timeObj = $tp.find('#ui_tpicker_time_'+ dp_id);\n\n\t\t\tif (this.inst !== null) {\n\t\t\t\tvar timeDefined = this.timeDefined;\n\t\t\t\tthis._onTimeChange();\n\t\t\t\tthis.timeDefined = timeDefined;\n\t\t\t}\n\n\t\t\t//Emulate datepicker onSelect behavior. Call on slidestop.\n\t\t\tvar onSelectDelegate = function() {\n\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t};\n\t\t\tthis.hour_slider.bind('slidestop',onSelectDelegate);\n\t\t\tthis.minute_slider.bind('slidestop',onSelectDelegate);\n\t\t\tthis.second_slider.bind('slidestop',onSelectDelegate);\n\t\t}\n\t},\n\n\t//########################################################################\n\t// This function tries to limit the ability to go outside the \n\t// min/max date range\n\t//########################################################################\n\t_limitMinMaxDateTime: function(dp_inst, adjustSliders){\n\t\tvar o = this._defaults,\n\t\t\tdp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\n\n\t\tif(!this._defaults.showTimepicker) return; // No time so nothing to check here\n\n\t\tif(this._defaults.minDateTime !== null && dp_date){\n\t\t\tvar minDateTime = this._defaults.minDateTime,\n\t\t\t\tminDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\n\n\t\t\tif(this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null){\n\t\t\t\tthis.hourMinOriginal = o.hourMin;\n\t\t\t\tthis.minuteMinOriginal = o.minuteMin;\n\t\t\t\tthis.secondMinOriginal = o.secondMin;\n\t\t\t}\n\n\t\t\tif(dp_inst.settings.timeOnly || minDateTimeDate.getTime() == dp_date.getTime()) {\n\t\t\t\tthis._defaults.hourMin = minDateTime.getHours();\n\t\t\t\tif (this.hour <= this._defaults.hourMin) {\n\t\t\t\t\tthis.hour = this._defaults.hourMin;\n\t\t\t\t\tthis._defaults.minuteMin = minDateTime.getMinutes();\n\t\t\t\t\tif (this.minute <= this._defaults.minuteMin) {\n\t\t\t\t\t\tthis.minute = this._defaults.minuteMin;\n\t\t\t\t\t\tthis._defaults.secondMin = minDateTime.getSeconds();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(this.second < this._defaults.secondMin) this.second = this._defaults.secondMin;\n\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\n\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._defaults.hourMin = this.hourMinOriginal;\n\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\n\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t}\n\t\t}\n\n\t\tif(this._defaults.maxDateTime !== null && dp_date){\n\t\t\tvar maxDateTime = this._defaults.maxDateTime,\n\t\t\t\tmaxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\n\t\n\t\t\tif(this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null){\n\t\t\t\tthis.hourMaxOriginal = o.hourMax;\n\t\t\t\tthis.minuteMaxOriginal = o.minuteMax;\n\t\t\t\tthis.secondMaxOriginal = o.secondMax;\n\t\t\t}\n\n\t\t\tif(dp_inst.settings.timeOnly || maxDateTimeDate.getTime() == dp_date.getTime()){\n\t\t\t\tthis._defaults.hourMax = maxDateTime.getHours();\n\t\t\t\tif (this.hour >= this._defaults.hourMax) {\n\t\t\t\t\tthis.hour = this._defaults.hourMax;\n\t\t\t\t\tthis._defaults.minuteMax = maxDateTime.getMinutes();\n\t\t\t\t\tif (this.minute >= this._defaults.minuteMax) {\n\t\t\t\t\t\tthis.minute = this._defaults.minuteMax;\n\t\t\t\t\t\tthis._defaults.secondMin = maxDateTime.getSeconds();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(this.second > this._defaults.secondMax) this.second = this._defaults.secondMax;\n\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\n\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._defaults.hourMax = this.hourMaxOriginal;\n\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\n\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t}\n\t\t}\n\n\t\tif(adjustSliders !== undefined && adjustSliders === true){\n\t\t\tthis.hour_slider.slider(\"option\", { min: this._defaults.hourMin, max: this._defaults.hourMax }).slider('value', this.hour);\n\t\t\tthis.minute_slider.slider(\"option\", { min: this._defaults.minuteMin, max: this._defaults.minuteMax }).slider('value', this.minute);\n\t\t\tthis.second_slider.slider(\"option\", { min: this._defaults.secondMin, max: this._defaults.secondMax }).slider('value', this.second);\n\t\t}\n\n\t},\n\n\t\n\t//########################################################################\n\t// when a slider moves, set the internal time...\n\t// on time change is also called when the time is updated in the text field\n\t//########################################################################\n\t_onTimeChange: function() {\n\t\tvar hour   = (this.hour_slider) ? this.hour_slider.slider('value') : false,\n\t\t\tminute = (this.minute_slider) ? this.minute_slider.slider('value') : false,\n\t\t\tsecond = (this.second_slider) ? this.second_slider.slider('value') : false,\n\t\t\ttimezone = (this.timezone_select) ? this.timezone_select.val() : false;\n\t\t\n\t\tif (hour !== false) hour = parseInt(hour,10);\n\t\tif (minute !== false) minute = parseInt(minute,10);\n\t\tif (second !== false) second = parseInt(second,10);\n\n\t\tvar ampm = (hour < 12) ? 'AM' : 'PM';\n\t\t\t\n\t\t// If the update was done in the input field, the input field should not be updated.\n\t\t// If the update was done using the sliders, update the input field.\n\t\tvar hasChanged = (hour != this.hour || minute != this.minute || second != this.second || (this.ampm.length > 0 && this.ampm != ampm) || timezone != this.timezone);\n\t\t\n\t\tif (hasChanged) {\n\n\t\t\tif (hour !== false)this.hour = hour;\n\t\t\tif (minute !== false) this.minute = minute;\n\t\t\tif (second !== false) this.second = second;\n\t\t\tif (timezone !== false) this.timezone = timezone;\n\t\t\tthis._limitMinMaxDateTime(this.inst, true);\n\t\t}\n\t\tif (this._defaults.ampm) this.ampm = ampm;\n\t\t\n\t\tthis._formatTime();\n\t\tif (this.$timeObj) this.$timeObj.text(this.formattedTime);\n\t\tthis.timeDefined = true;\n\t\tif (hasChanged) this._updateDateTime();\n\t},\n    \n\t//########################################################################\n\t// call custom onSelect. \n\t// bind to sliders slidestop, and grid click.\n\t//########################################################################\n\t_onSelectHandler: function() {\n\t\tvar onSelect = this._defaults['onSelect'];\n\t\tvar inputEl = this.$input ? this.$input[0] : null;\n\t\tif (onSelect && inputEl) {\n\t\t\tonSelect.apply(inputEl, [this.formattedDateTime, this]);\n\t\t}\n\t},\n\n\t//########################################################################\n\t// format the time all pretty...\n\t//########################################################################\n\t_formatTime: function(time, format, ampm) {\n\t\tif (ampm == undefined) ampm = this._defaults.ampm;\n\t\ttime = time || { hour: this.hour, minute: this.minute, second: this.second, ampm: this.ampm, timezone: this.timezone };\n\t\tvar tmptime = format || this._defaults.timeFormat.toString();\n\n\t\tif (ampm) {\n\t\t\tvar hour12 = ((time.ampm == 'AM') ? (time.hour) : (time.hour % 12));\n\t\t\thour12 = (Number(hour12) === 0) ? 12 : hour12;\n\t\t\ttmptime = tmptime.toString()\n\t\t\t\t.replace(/hh/g, ((hour12 < 10) ? '0' : '') + hour12)\n\t\t\t\t.replace(/h/g, hour12)\n\t\t\t\t.replace(/mm/g, ((time.minute < 10) ? '0' : '') + time.minute)\n\t\t\t\t.replace(/m/g, time.minute)\n\t\t\t\t.replace(/ss/g, ((time.second < 10) ? '0' : '') + time.second)\n\t\t\t\t.replace(/s/g, time.second)\n\t\t\t\t.replace(/TT/g, time.ampm.toUpperCase())\n\t\t\t\t.replace(/Tt/g, time.ampm.toUpperCase())\n\t\t\t\t.replace(/tT/g, time.ampm.toLowerCase())\n\t\t\t\t.replace(/tt/g, time.ampm.toLowerCase())\n\t\t\t\t.replace(/T/g, time.ampm.charAt(0).toUpperCase())\n\t\t\t\t.replace(/t/g, time.ampm.charAt(0).toLowerCase())\n\t\t\t\t.replace(/z/g, time.timezone);\n\t\t} else {\n\t\t\ttmptime = tmptime.toString()\n\t\t\t\t.replace(/hh/g, ((time.hour < 10) ? '0' : '') + time.hour)\n\t\t\t\t.replace(/h/g, time.hour)\n\t\t\t\t.replace(/mm/g, ((time.minute < 10) ? '0' : '') + time.minute)\n\t\t\t\t.replace(/m/g, time.minute)\n\t\t\t\t.replace(/ss/g, ((time.second < 10) ? '0' : '') + time.second)\n\t\t\t\t.replace(/s/g, time.second)\n\t\t\t\t.replace(/z/g, time.timezone);\n\t\t\ttmptime = $.trim(tmptime.replace(/t/gi, ''));\n\t\t}\n\n\t\tif (arguments.length) return tmptime;\n\t\telse this.formattedTime = tmptime;\n\t},\n\n\t//########################################################################\n\t// update our input with the new date time..\n\t//########################################################################\n\t_updateDateTime: function(dp_inst) {\n\t\tdp_inst = this.inst || dp_inst,\n\t\t\tdt = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay),\n\t\t\tdateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\n\t\t\tformatCfg = $.datepicker._getFormatConfig(dp_inst),\n\t\t\ttimeAvailable = dt !== null && this.timeDefined;\n\t\tthis.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\n\t\tvar formattedDateTime = this.formattedDate;\n\t\tif (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0))\n\t\t\treturn;\n\n\t\tif (this._defaults.timeOnly === true) {\n\t\t\tformattedDateTime = this.formattedTime;\n\t\t} else if (this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) {\n\t\t\tformattedDateTime += this._defaults.separator + this.formattedTime;\n\t\t}\n\n\t\tthis.formattedDateTime = formattedDateTime;\n\n\t\tif(!this._defaults.showTimepicker) {\n\t\t\tthis.$input.val(this.formattedDate);\n\t\t} else if (this.$altInput && this._defaults.altFieldTimeOnly === true) {\n\t\t\tthis.$altInput.val(this.formattedTime);\n\t\t\tthis.$input.val(this.formattedDate);\n\t\t} else if(this.$altInput) {\n\t\t\tthis.$altInput.val(formattedDateTime);\n\t\t\tthis.$input.val(formattedDateTime);\n\t\t} else {\n\t\t\tthis.$input.val(formattedDateTime);\n\t\t}\n\t\t\n\t\tthis.$input.trigger(\"change\");\n\t}\n\n});\n\n$.fn.extend({\n\t//########################################################################\n\t// shorthand just to use timepicker..\n\t//########################################################################\n\ttimepicker: function(o) {\n\t\to = o || {};\n\t\tvar tmp_args = arguments;\n\n\t\tif (typeof o == 'object') tmp_args[0] = $.extend(o, { timeOnly: true });\n\n\t\treturn $(this).each(function() {\n\t\t\t$.fn.datetimepicker.apply($(this), tmp_args);\n\t\t});\n\t},\n\n\t//########################################################################\n\t// extend timepicker to datepicker\n\t//########################################################################\n\tdatetimepicker: function(o) {\n\t\to = o || {};\n\t\tvar $input = this,\n\t\ttmp_args = arguments;\n\n\t\tif (typeof(o) == 'string'){\n\t\t\tif(o == 'getDate') \n\t\t\t\treturn $.fn.datepicker.apply($(this[0]), tmp_args);\n\t\t\telse \n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $t = $(this);\n\t\t\t\t\t$t.datepicker.apply($t, tmp_args);\n\t\t\t\t});\n\t\t}\n\t\telse\n\t\t\treturn this.each(function() {\n\t\t\t\tvar $t = $(this);\n\t\t\t\t$t.datepicker($.timepicker._newInst($t, o)._defaults);\n\t\t\t});\n\t}\n});\n\n//########################################################################\n// the bad hack :/ override datepicker so it doesnt close on select\n// inspired: http://stackoverflow.com/questions/1252512/jquery-datepicker-prevent-closing-picker-when-clicking-a-date/1762378#1762378\n//########################################################################\n$.datepicker._base_selectDate = $.datepicker._selectDate;\n$.datepicker._selectDate = function (id, dateStr) {\n\tvar inst = this._getInst($(id)[0]),\n\t\ttp_inst = this._get(inst, 'timepicker');\n\n\tif (tp_inst) {\n\t\ttp_inst._limitMinMaxDateTime(inst, true);\n\t\tinst.inline = inst.stay_open = true;\n\t\t//This way the onSelect handler called from calendarpicker get the full dateTime\n\t\tthis._base_selectDate(id, dateStr + tp_inst._defaults.separator + tp_inst.formattedTime);\n\t\tinst.inline = inst.stay_open = false;\n\t\tthis._notifyChange(inst);\n\t\tthis._updateDatepicker(inst);\n\t}\n\telse this._base_selectDate(id, dateStr);\n};\n\n//#############################################################################################\n// second bad hack :/ override datepicker so it triggers an event when changing the input field\n// and does not redraw the datepicker on every selectDate event\n//#############################################################################################\n$.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;\n$.datepicker._updateDatepicker = function(inst) {\n\tif (typeof(inst.stay_open) !== 'boolean' || inst.stay_open === false) {\n\t\t\t\t\n\t\tthis._base_updateDatepicker(inst);\n\t\t\n\t\t// Reload the time control when changing something in the input text field.\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif(tp_inst) tp_inst._addTimePicker(inst);\n\t}\n};\n\n//#######################################################################################\n// third bad hack :/ override datepicker so it allows spaces and colan in the input field\n//#######################################################################################\n$.datepicker._base_doKeyPress = $.datepicker._doKeyPress;\n$.datepicker._doKeyPress = function(event) {\n\tvar inst = $.datepicker._getInst(event.target),\n\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\n\n\tif (tp_inst) {\n\t\tif ($.datepicker._get(inst, 'constrainInput')) {\n\t\t\tvar ampm = tp_inst._defaults.ampm,\n\t\t\t\tdatetimeChars = tp_inst._defaults.timeFormat.toString()\n\t\t\t\t\t\t\t\t.replace(/[hms]/g, '')\n\t\t\t\t\t\t\t\t.replace(/TT/g, ampm ? 'APM' : '')\n\t\t\t\t\t\t\t\t.replace(/Tt/g, ampm ? 'AaPpMm' : '')\n\t\t\t\t\t\t\t\t.replace(/tT/g, ampm ? 'AaPpMm' : '')\n\t\t\t\t\t\t\t\t.replace(/T/g, ampm ? 'AP' : '')\n\t\t\t\t\t\t\t\t.replace(/tt/g, ampm ? 'apm' : '')\n\t\t\t\t\t\t\t\t.replace(/t/g, ampm ? 'ap' : '') +\n\t\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\t\ttp_inst._defaults.separator +\n\t\t\t\t\t\t\t\t$.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat')),\n\t\t\t\tchr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);\n\t\t\treturn event.ctrlKey || (chr < ' ' || !datetimeChars || datetimeChars.indexOf(chr) > -1);\n\t\t}\n\t}\n\t\n\treturn $.datepicker._base_doKeyPress(event);\n};\n\n//#######################################################################################\n// Override key up event to sync manual input changes.\n//#######################################################################################\n$.datepicker._base_doKeyUp = $.datepicker._doKeyUp;\n$.datepicker._doKeyUp = function (event) {\n\tvar inst = $.datepicker._getInst(event.target),\n\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\n\n\tif (tp_inst) {\n\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() != inst.lastVal)) {\n\t\t\ttry {\n\t\t\t\t$.datepicker._updateDatepicker(inst);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\t$.datepicker.log(err);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $.datepicker._base_doKeyUp(event);\n};\n\n//#######################################################################################\n// override \"Today\" button to also grab the time.\n//#######################################################################################\n$.datepicker._base_gotoToday = $.datepicker._gotoToday;\n$.datepicker._gotoToday = function(id) {\n\tthis._base_gotoToday(id);\n\tthis._setTime(this._getInst($(id)[0]), new Date());\n};\n\n//#######################################################################################\n// Disable & enable the Time in the datetimepicker\n//#######################################################################################\n$.datepicker._disableTimepickerDatepicker = function(target, date, withDate) {\n\tvar inst = this._getInst(target),\n\ttp_inst = this._get(inst, 'timepicker');\n\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n\tif (tp_inst) {\n\t\ttp_inst._defaults.showTimepicker = false;\n\t\ttp_inst._updateDateTime(inst);\n\t}\n};\n\n$.datepicker._enableTimepickerDatepicker = function(target, date, withDate) {\n\tvar inst = this._getInst(target),\n\ttp_inst = this._get(inst, 'timepicker');\n\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n\tif (tp_inst) {\n\t\ttp_inst._defaults.showTimepicker = true;\n\t\ttp_inst._addTimePicker(inst); // Could be disabled on page load\n\t\ttp_inst._updateDateTime(inst);\n\t}\n};\n\n//#######################################################################################\n// Create our own set time function\n//#######################################################################################\n$.datepicker._setTime = function(inst, date) {\n\tvar tp_inst = this._get(inst, 'timepicker');\n\tif (tp_inst) {\n\t\tvar defaults = tp_inst._defaults,\n\t\t\t// calling _setTime with no date sets time to defaults\n\t\t\thour = date ? date.getHours() : defaults.hour,\n\t\t\tminute = date ? date.getMinutes() : defaults.minute,\n\t\t\tsecond = date ? date.getSeconds() : defaults.second;\n\n\t\t//check if within min/max times..\n\t\tif ((hour < defaults.hourMin || hour > defaults.hourMax) || (minute < defaults.minuteMin || minute > defaults.minuteMax) || (second < defaults.secondMin || second > defaults.secondMax)) {\n\t\t\thour = defaults.hourMin;\n\t\t\tminute = defaults.minuteMin;\n\t\t\tsecond = defaults.secondMin;\n\t\t}\n\n\t\tif (tp_inst.hour_slider) tp_inst.hour_slider.slider('value', hour);\n\t\telse tp_inst.hour = hour;\n\t\tif (tp_inst.minute_slider) tp_inst.minute_slider.slider('value', minute);\n\t\telse tp_inst.minute = minute;\n\t\tif (tp_inst.second_slider) tp_inst.second_slider.slider('value', second);\n\t\telse tp_inst.second = second;\n\n\t\ttp_inst._onTimeChange();\n\t\ttp_inst._updateDateTime(inst);\n\t}\n};\n\n//#######################################################################################\n// Create new public method to set only time, callable as $().datepicker('setTime', date)\n//#######################################################################################\n$.datepicker._setTimeDatepicker = function(target, date, withDate) {\n\tvar inst = this._getInst(target),\n\t\ttp_inst = this._get(inst, 'timepicker');\n\n\tif (tp_inst) {\n\t\tthis._setDateFromField(inst);\n\t\tvar tp_date;\n\t\tif (date) {\n\t\t\tif (typeof date == \"string\") {\n\t\t\t\ttp_inst._parseTime(date, withDate);\n\t\t\t\ttp_date = new Date();\n\t\t\t\ttp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second);\n\t\t\t}\n\t\t\telse tp_date = new Date(date.getTime());\n\t\t\tif (tp_date.toString() == 'Invalid Date') tp_date = undefined;\n\t\t\tthis._setTime(inst, tp_date);\n\t\t}\n\t}\n\n};\n\n//#######################################################################################\n// override setDate() to allow setting time too within Date object\n//#######################################################################################\n$.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;\n$.datepicker._setDateDatepicker = function(target, date) {\n\tvar inst = this._getInst(target),\n\ttp_date = (date instanceof Date) ? new Date(date.getTime()) : date;\n\n\tthis._updateDatepicker(inst);\n\tthis._base_setDateDatepicker.apply(this, arguments);\n\tthis._setTimeDatepicker(target, tp_date, true);\n};\n\n//#######################################################################################\n// override getDate() to allow getting time too within Date object\n//#######################################################################################\n$.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;\n$.datepicker._getDateDatepicker = function(target, noDefault) {\n\tvar inst = this._getInst(target),\n\t\ttp_inst = this._get(inst, 'timepicker');\n\n\tif (tp_inst) {\n\t\tthis._setDateFromField(inst, noDefault);\n\t\tvar date = this._getDate(inst);\n\t\tif (date && tp_inst._parseTime($(target).val(), tp_inst.timeOnly)) date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second);\n\t\treturn date;\n\t}\n\treturn this._base_getDateDatepicker(target, noDefault);\n};\n\n//#######################################################################################\n// jQuery extend now ignores nulls!\n//#######################################################################################\nfunction extendRemove(target, props) {\n\t$.extend(target, props);\n\tfor (var name in props)\n\t\tif (props[name] === null || props[name] === undefined)\n\t\t\ttarget[name] = props[name];\n\treturn target;\n}\n\n$.timepicker = new Timepicker(); // singleton instance\n$.timepicker.version = \"0.9.5\";\n\n})(jQuery);"],"sourceRoot":"/source/"}